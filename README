# RPSD: Multiplayer Rock-Paper-Scissors Daemon

`rpsd` is a TCP-based multiplayer Rock-Paper-Scissors game server developed for **CS 214: Systems Programming ‚Äì Spring 2025**. It accepts incoming connections, pairs clients into matches, and manages real-time gameplay using a custom protocol over forked processes.

---

## Project Motivation

Project managers (in this case, system programmers) face challenges such as:

* Managing concurrent client sessions
* Ensuring reliable, fault-tolerant networking
* Preventing user duplication and enforcing fairness

`rpsd` addresses these challenges through:

* Custom multiplayer protocol handling (`RPSP`)
* Scalable process isolation with `fork()`
* Defensive programming around edge cases

---

## Features

* **TCP Socket Handling**

  * Accepts client connections via command-line-defined port
  * Reads, parses, and responds to protocol messages in real time

* **RPSP Protocol Support**

  * Implements all message types: `P`, `W`, `B`, `M`, `R`, `C`, `Q`
  * Exact formatting required for each message

* **Concurrency & Forking**

  * Each match handled in a separate process via `fork()`
  * Fully isolated sessions for scalability and reliability

* **Robust Session Control**

  * Tracks active/waiting players
  * Prevents duplicate logins
  * Handles disconnects as forfeits

* **Rematch Support**

  * Rematch requests and quit flows supported post-match
  * Proper cleanup of sockets and player state

---

## Test Plan

Manual verification was performed across the following key scenarios:

* **Win/Loss Case**
  `Alice (ROCK)` defeats `Bob (SCISSORS)` ‚Üí result reported ‚Üí rematch or quit.

* **Draw**
  `Carol` and `Dave` both play PAPER ‚Üí receive `R|D|||`.

* **Forfeit Handling**
  `Eve` connects and disconnects immediately ‚Üí opponent (`Frank`) receives `R|F|||`.

* **Duplicate Login**
  If `Frank` is in a match, another client using `"Frank"` gets `R|L|Logged in||`.

* **Concurrent Games**
  Multiple pairs run matches independently, each forked into separate processes.

---

## Edge Cases & Fixes

| üêû Issue                                                                                            | üîß Fix                                                                                      |        |                     |          |                       |   |                                          |
| --------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------- | ------ | ------------------- | -------- | --------------------- | - | ---------------------------------------- |
| **Stale Waiting Socket Cleanup (Rapid Reconnect)**<br>Ctrl+C before matchmaking left stale sockets. | On each `accept()`, purge any closed/error sockets from the waiting queue.                  |        |                     |          |                       |   |                                          |
| **Ignored Invalid Messages**<br>Malformed messages broke state advancement.                         | `read_message()` returns `-1` for bad inputs. We accept only valid \`P                      | <name> |                     | \`.      |                       |   |                                          |
| **Immediate Wait Reply**<br>Clients hung without \`W                                                | 1                                                                                           |        | \` after handshake. | Send \`W | 1                     |   | \` immediately after valid name receipt. |
| **Duplicate Name in Waiting Queue**<br>Duplicate names bypassed checks if in waiting state.         | `name_is_duplicate()` now also checks the waiting list.                                     |        |                     |          |                       |   |                                          |
| **Forfeit During Moves**<br>Mid-game disconnects caused indefinite wait.                            | If `read_message()` fails, send \`R                                                         | F      |                     |          | \` and close sockets. |   |                                          |
| **Child Process Cleanup & Active List Reaping**<br>Finished child processes weren‚Äôt removed.        | `SIGCHLD` handler `reap_children()` uses `waitpid(..., WNOHANG)` to clear PIDs and records. |        |                     |          |                       |   |                                          |

---

## Concurrency Note

The server handles **multiple concurrent games using `fork()`**, allowing completely independent matches to run simultaneously with isolated state.

---

## Setup Instructions

### Prerequisites

* C compiler (e.g., `gcc`)
* POSIX-compliant system (Linux/macOS)
* Terminal for TCP client testing (e.g., `telnet`, `nc`)

### Compile

```bash
make
```

### Run

```bash
./rpsd <port>
```

Example:

```bash
./rpsd 12345
```
